int find(int x,int y[],int z)
{
	int left = 0, right = z- 1;
	while (left<=right)
	{
		int mid = (right + left) / 2;
		if (x <y[mid])
			right = mid - 1;
		else if (x > y[mid])
			left = mid + 1;
		else
			return mid;
	}
	return -1;
}//定义函数实现二分查找有序数组

#include<stdio.h>
int main()
{
	int k = 210;
	int arr[] = { 1,2,3,4,5,6,7,11,19,210 };
	int a = sizeof(arr) / sizeof(arr[0]);
	int left = 0, right =a-1;
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] < k)
			left=mid+1;
		else if(arr[mid]>k)
			right=mid-1;
		else
		{
			printf("找到了，下标为%d\n", mid);
			break;
		}
	}
	if(left>right)
		printf("不存在\n");
	return 0;
}//二分查找
